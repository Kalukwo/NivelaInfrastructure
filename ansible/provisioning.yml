- name: Provision server with Docker
  hosts: all
  become: yes
  vars:
    app_directory: /opt/app
  
  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Remove conflicting Docker packages
      apt:
        name:
          - docker.io
          - docker-doc
          - docker-compose
          - docker-compose-v2
          - podman-docker
          - containerd
          - runc
        state: absent

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - python3-pip
        state: present

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
      become: yes

    - name: Update apt package index after adding Docker repo
      apt:
        update_cache: yes
        force_apt_get: yes
      become: yes

    - name: Update apt package index after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker CE and related packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Create application directory
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      
    - name: Install Python Docker library (for Ansible docker modules)
      apt:
        name:
          - python3-docker
          - python3-requests
        state: present
      become: yes

    - name: Verify Docker Compose plugin installation
      command: docker compose version
      register: compose_version
      become_user: "{{ ansible_user }}"

    - name: Display Docker Compose version
      debug:
        msg: "Docker Compose installed: {{ compose_version.stdout }}"

    - name: Test Docker installation
      command: docker --version
      register: docker_version
      become_user: "{{ ansible_user }}"

    - name: Display Docker version
      debug:
        msg: "Docker installed successfully: {{ docker_version.stdout }}"